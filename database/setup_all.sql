-- =====================================
-- SETUP COMPLETE DATABASE FOR GEAR SHOP
-- =====================================

-- S·ª≠ d·ª•ng database gear_shop
USE gear_shop;

-- Hi·ªÉn th·ªã th√¥ng tin b·∫Øt ƒë·∫ßu setup
SELECT 'B·∫Øt ƒë·∫ßu setup database Gear Shop...' as message;

-- =====================================
-- 1. T·∫†O B·∫¢NG CATEGORIES
-- =====================================

CREATE TABLE IF NOT EXISTS categories (
    category_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    category_name VARCHAR(100) NOT NULL,
    category_code VARCHAR(50) NOT NULL UNIQUE,
    description TEXT,
    icon_code VARCHAR(100),
    parent_id BIGINT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (parent_id) REFERENCES categories(category_id) ON DELETE SET NULL,
    INDEX idx_category_code (category_code),
    INDEX idx_parent_id (parent_id),
    INDEX idx_is_active (is_active)
);

SELECT 'B·∫£ng categories ƒë√£ ƒë∆∞·ª£c t·∫°o' as message;

-- =====================================
-- 2. T·∫†O B·∫¢NG PRODUCTS
-- =====================================

CREATE TABLE IF NOT EXISTS products (
    product_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    product_code VARCHAR(100) NOT NULL UNIQUE,
    brand_id BIGINT,
    category_id BIGINT,
    description TEXT,
    price DECIMAL(15, 2) NOT NULL,
    sale_price DECIMAL(15, 2) NULL,
    stock_quantity INT DEFAULT 0,
    image_urls JSON,
    specifications JSON,
    is_featured BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (brand_id) REFERENCES brands(brand_id) ON DELETE SET NULL,
    FOREIGN KEY (category_id) REFERENCES categories(category_id) ON DELETE SET NULL,
    INDEX idx_product_code (product_code),
    INDEX idx_brand_id (brand_id),
    INDEX idx_category_id (category_id),
    INDEX idx_is_active (is_active),
    INDEX idx_is_featured (is_featured),
    INDEX idx_price (price)
);

SELECT 'B·∫£ng products ƒë√£ ƒë∆∞·ª£c t·∫°o' as message;

-- =====================================
-- 3. KI·ªÇM TRA V√Ä TH√äM D·ªÆ LI·ªÜU M·∫™U CHO CATEGORIES
-- =====================================

-- Ki·ªÉm tra xem ƒë√£ c√≥ d·ªØ li·ªáu ch∆∞a
SET @category_count = (SELECT COUNT(*) FROM categories);

-- Ch·ªâ th√™m d·ªØ li·ªáu n·∫øu b·∫£ng tr·ªëng
SELECT 
    @category_count as existing_categories,
    CASE 
        WHEN @category_count = 0 THEN 'S·∫Ω th√™m d·ªØ li·ªáu m·∫´u'
        ELSE 'B·∫£ng ƒë√£ c√≥ d·ªØ li·ªáu, b·ªè qua vi·ªác th√™m m·∫´u'
    END as action;

-- Th√™m d·ªØ li·ªáu m·∫´u n·∫øu b·∫£ng tr·ªëng
INSERT INTO categories (category_name, category_code, description, icon_code, parent_id, is_active)
SELECT * FROM (
    SELECT 'CPU - B·ªô Vi X·ª≠ L√Ω' as category_name, 'cpu' as category_code, 'Central Processing Unit - B·ªô x·ª≠ l√Ω trung t√¢m m√°y t√≠nh' as description, 'üîß' as icon_code, NULL as parent_id, TRUE as is_active
    UNION ALL SELECT 'VGA - Card ƒê·ªì H·ªça', 'vga', 'Graphics Processing Unit - Card ƒë·ªì h·ªça x·ª≠ l√Ω h√¨nh ·∫£nh', 'üéÆ', NULL, TRUE
    UNION ALL SELECT 'Mainboard - Bo M·∫°ch Ch·ªß', 'mainboard', 'Motherboard - Bo m·∫°ch ch·ªß k·∫øt n·ªëi c√°c linh ki·ªán', 'üîå', NULL, TRUE
    UNION ALL SELECT 'RAM - B·ªô Nh·ªõ', 'ram', 'Random Access Memory - B·ªô nh·ªõ truy c·∫≠p ng·∫´u nhi√™n', 'üíæ', NULL, TRUE
    UNION ALL SELECT 'Storage - L∆∞u Tr·ªØ', 'storage', '·ªî c·ª©ng HDD, SSD v√† c√°c thi·∫øt b·ªã l∆∞u tr·ªØ d·ªØ li·ªáu', 'üíø', NULL, TRUE
    UNION ALL SELECT 'PSU - Ngu·ªìn M√°y T√≠nh', 'psu', 'Power Supply Unit - B·ªô ngu·ªìn c·∫•p ƒëi·ªán cho m√°y t√≠nh', '‚ö°', NULL, TRUE
    UNION ALL SELECT 'Cooling - T·∫£n Nhi·ªát', 'cooling', 'H·ªá th·ªëng l√†m m√°t CPU, VGA v√† case', '‚ùÑÔ∏è', NULL, TRUE
    UNION ALL SELECT 'Case - V·ªè M√°y T√≠nh', 'case', 'Computer Case - V·ªè m√°y t√≠nh v√† ph·ª• ki·ªán', 'üè†', NULL, TRUE
    UNION ALL SELECT 'Monitor - M√†n H√¨nh', 'monitor', 'Computer Monitor - M√†n h√¨nh m√°y t√≠nh c√°c lo·∫°i', 'üñ•Ô∏è', NULL, TRUE
    UNION ALL SELECT 'Networking - Thi·∫øt B·ªã M·∫°ng', 'networking', 'Router, Switch, WiFi v√† thi·∫øt b·ªã m·∫°ng', 'üåê', NULL, TRUE
    UNION ALL SELECT 'Peripherals - Ph·ª• Ki·ªán', 'peripherals', 'B√†n ph√≠m, chu·ªôt, tai nghe v√† ph·ª• ki·ªán m√°y t√≠nh', '‚å®Ô∏è', NULL, TRUE
    UNION ALL SELECT 'Gaming - Gaming Gear', 'gaming', 'Gear v√† ph·ª• ki·ªán gaming chuy√™n nghi·ªáp', 'üéØ', NULL, TRUE
) as new_categories
WHERE @category_count = 0;

-- Th√™m sub-categories n·∫øu b·∫£ng tr·ªëng
INSERT INTO categories (category_name, category_code, description, icon_code, parent_id, is_active)
SELECT * FROM (
    SELECT 'Intel CPU' as category_name, 'intel-cpu' as category_code, 'B·ªô vi x·ª≠ l√Ω Intel c√°c d√≤ng' as description, 'fa-microchip' as icon_code, (SELECT category_id FROM categories WHERE category_code = 'cpu') as parent_id, TRUE as is_active
    UNION ALL SELECT 'AMD CPU', 'amd-cpu', 'B·ªô vi x·ª≠ l√Ω AMD Ryzen v√† FX', 'fa-microchip', (SELECT category_id FROM categories WHERE category_code = 'cpu'), TRUE
    UNION ALL SELECT 'NVIDIA GeForce', 'nvidia-geforce', 'Card ƒë·ªì h·ªça NVIDIA GeForce RTX, GTX', 'fa-display', (SELECT category_id FROM categories WHERE category_code = 'vga'), TRUE
    UNION ALL SELECT 'AMD Radeon', 'amd-radeon', 'Card ƒë·ªì h·ªça AMD Radeon RX', 'fa-display', (SELECT category_id FROM categories WHERE category_code = 'vga'), TRUE
    UNION ALL SELECT 'SSD SATA', 'ssd-sata', 'Solid State Drive SATA 2.5 inch', 'fa-hdd', (SELECT category_id FROM categories WHERE category_code = 'storage'), TRUE
    UNION ALL SELECT 'SSD NVMe', 'ssd-nvme', 'NVMe SSD M.2 t·ªëc ƒë·ªô cao', 'fa-bolt', (SELECT category_id FROM categories WHERE category_code = 'storage'), TRUE
    UNION ALL SELECT 'HDD', 'hdd', 'Hard Disk Drive - ·ªî c·ª©ng c∆° h·ªçc', 'fa-circle-dot', (SELECT category_id FROM categories WHERE category_code = 'storage'), TRUE
    UNION ALL SELECT 'DDR4 RAM', 'ddr4-ram', 'B·ªô nh·ªõ DDR4 desktop v√† laptop', 'fa-memory', (SELECT category_id FROM categories WHERE category_code = 'ram'), TRUE
    UNION ALL SELECT 'DDR5 RAM', 'ddr5-ram', 'B·ªô nh·ªõ DDR5 th·∫ø h·ªá m·ªõi', 'fa-memory', (SELECT category_id FROM categories WHERE category_code = 'ram'), TRUE
    UNION ALL SELECT 'Gaming Keyboard', 'gaming-keyboard', 'B√†n ph√≠m gaming c∆° v√† m√†ng', '‚å®Ô∏è', (SELECT category_id FROM categories WHERE category_code = 'peripherals'), TRUE
    UNION ALL SELECT 'Gaming Mouse', 'gaming-mouse', 'Chu·ªôt gaming c√≥ d√¢y v√† kh√¥ng d√¢y', 'üñ±Ô∏è', (SELECT category_id FROM categories WHERE category_code = 'peripherals'), TRUE
    UNION ALL SELECT 'Gaming Headset', 'gaming-headset', 'Tai nghe gaming v√† streamer', 'üéß', (SELECT category_id FROM categories WHERE category_code = 'peripherals'), TRUE
) as new_subcategories
WHERE @category_count = 0;

SELECT 'D·ªØ li·ªáu m·∫´u ƒë√£ ƒë∆∞·ª£c th√™m (n·∫øu c·∫ßn)' as message;

-- =====================================
-- 4. HI·ªÇN TH·ªä K·∫æT QU·∫¢
-- =====================================

-- Hi·ªÉn th·ªã t·ªïng s·ªë categories
SELECT COUNT(*) as total_categories FROM categories;

-- Hi·ªÉn th·ªã categories theo level
SELECT 
    CASE 
        WHEN parent_id IS NULL THEN 'Level 1 (Main)'
        WHEN category_id IN (SELECT DISTINCT parent_id FROM categories WHERE parent_id IS NOT NULL) THEN 'Level 2 (Sub)'
        ELSE 'Level 3 (Sub-Sub)'
    END as category_level,
    COUNT(*) as count
FROM categories 
GROUP BY 
    CASE 
        WHEN parent_id IS NULL THEN 'Level 1 (Main)'
        WHEN category_id IN (SELECT DISTINCT parent_id FROM categories WHERE parent_id IS NOT NULL) THEN 'Level 2 (Sub)'
        ELSE 'Level 3 (Sub-Sub)'
    END;

-- Hi·ªÉn th·ªã m·ªôt s·ªë categories m·∫´u
SELECT 
    c1.category_name as main_category,
    c2.category_name as sub_category
FROM categories c1
LEFT JOIN categories c2 ON c1.category_id = c2.parent_id
WHERE c1.parent_id IS NULL
ORDER BY c1.category_name, c2.category_name
LIMIT 20;

SELECT 'Setup database ho√†n t·∫•t!' as message; 