Table brand_assets {
  asset_id int [pk, increment]
  brand_id int
  asset_type enum('base64','url','file_path')
  asset_content text
  is_primary boolean
  created_at timestamp
  updated_at timestamp
  // foreign key: brand_id > brands.brand_id
}

Table brands {
  brand_id int [pk, increment]
  brand_name varchar(100)
  brand_code varchar(50) [unique]
  logo_code text
  website varchar(255)
}

Table brands_backup {
  brand_id int
  brand_name varchar(100)
  brand_code varchar(50)
  logo_code text
  description text
  website varchar(255)
  country varchar(50)
  founded_year int
  created_at timestamp
  updated_at timestamp
}

Table categories {
  category_id bigint [pk, increment]
  category_name varchar(100)
  category_code varchar(50) [unique]
  parent_id bigint
  is_active boolean
  created_at timestamp
  updated_at timestamp
  // foreign key: parent_id > categories.category_id
}

Table notification_settings {
  setting_id bigint [pk, increment]
  user_id bigint [unique]
  email_notifications boolean
  push_notifications boolean
  order_updates boolean
  promotions boolean
  new_products boolean
  created_at timestamp
  updated_at timestamp
  // foreign key: user_id > users.user_id
}

Table notifications {
  notification_id bigint [pk, increment]
  user_id bigint
  title varchar(255)
  message text
  type enum('success','info','warning','error')
  category enum('order_created','order_updated','order_cancelled','order_delivered','payment_success','payment_failed','admin_new_order','system','promotion')
  data json
  is_read boolean
  created_at timestamp
  updated_at timestamp
  // foreign key: user_id > users.user_id
}

Table order_items {
  id int [pk, increment]
  order_id int
  product_id int
  quantity int
  price decimal(15,2)
  created_at timestamp
  // foreign key: order_id > orders.id
}

Table orders {
  id int [pk, increment]
  user_id int
  total_amount decimal(15,2)
  status varchar(50)
  shipping_address text
  phone_number varchar(20)
  payment_method varchar(10)
  created_at timestamp
  updated_at timestamp
}

Table product_images {
  image_id bigint [pk, increment]
  product_id bigint
  image_name varchar(255)
  image_code longtext
  is_primary boolean
  display_order int
  created_at timestamp
  updated_at timestamp
  // foreign key: product_id > products.product_id
}

Table product_specifications {
  spec_id bigint [pk, increment]
  product_id bigint
  spec_name varchar(100)
  spec_value text
  display_order int
  created_at timestamp
  updated_at timestamp
  // foreign key: product_id > products.product_id
}

Table products {
  product_id bigint [pk, increment]
  product_name varchar(255)
  product_code varchar(100) [unique]
  brand_id int
  category_id bigint
  price decimal(15,2)
  original_price decimal(15,2)
  stock_quantity int
  is_active boolean
  created_at timestamp
  updated_at timestamp
  // foreign key: brand_id > brands.brand_id
  // foreign key: category_id > categories.category_id
}

Table roles {
  id bigint [pk, increment]
  name enum('ADMIN','STAFF','USER')
}

Table user_role {
  user_id bigint
  role_id bigint
  // composite primary key
  primary key (user_id, role_id)
  // foreign key: role_id > roles.id
}

Table users {
  user_id bigint [pk, increment]
  full_name varchar(255)
  email varchar(255) [unique]
  password_hash varchar(255)
  phone_number varchar(20)
  address text
  role varchar(100)
  is_active boolean
  last_login timestamp
  created_at timestamp
  updated_at timestamp
  reset_password_token varchar(255)
  reset_password_expires timestamp
}

// Relationships
Ref: brand_assets.brand_id > brands.brand_id
Ref: categories.parent_id > categories.category_id
Ref: notification_settings.user_id > users.user_id
Ref: notifications.user_id > users.user_id
Ref: order_items.order_id > orders.id
Ref: product_images.product_id > products.product_id
Ref: product_specifications.product_id > products.product_id
Ref: products.brand_id > brands.brand_id
Ref: products.category_id > categories.category_id
Ref: user_role.role_id > roles.id 